/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hms.pro;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import pos.pro.InvPanel;


/**
 *
 * @author lt1
 */
public class PrintForm extends javax.swing.JFrame {
     JpanelLoader jpload = new JpanelLoader();
     
    /**
     * Creates new form PrintForm
     */
    public PrintForm() {
        initComponents();
        InvPanel dekts = new InvPanel();
        jpload.jPanelLoader(panel1, dekts);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setTitle("PRINT");
        setName("printFrame"); // NOI18N
        setType(java.awt.Window.Type.POPUP);

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        panel1.setMaximumSize(new java.awt.Dimension(800, 1050));
        panel1.setMinimumSize(new java.awt.Dimension(800, 1050));
        panel1.setName(""); // NOI18N
        panel1.setPreferredSize(new java.awt.Dimension(612, 792));

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("PRINT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Q-PRINT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addGap(31, 31, 31)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(665, 800));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: SAVE TO FILE
        try {
            printComponentToFile(new InvPanel(), true);
            printComponentToFile(new InvPanel(), false);
        } catch (PrinterException exp) {
            exp.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try {
            printComponentToPrinter(new InvPanel(), true);
            printComponentToPrinter(new InvPanel(), false);
        } catch (PrinterException exp) {
            exp.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            printComponentToPrinterq(new InvPanel(), true);
            printComponentToPrinterq(new InvPanel(), false);
        } catch (PrinterException exp) {
            exp.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public static void printComponentToFile(JComponent comp, boolean fill) throws PrinterException {  
        String fileLoc = "";
        Paper paper = new Paper();
        paper.setSize(595, 842);
        paper.setImageableArea(1, 1, 595, 842);
        
        PageFormat pf = new PageFormat();
        pf.setPaper(paper);
       
        BufferedImage img = new BufferedImage(595, 842 ,BufferedImage.SCALE_SMOOTH);

        Graphics2D g2d = img.createGraphics();
        g2d.translate(pf.getImageableX(),pf.getImageableY());
        g2d.scale(1, 1);
        
        
        //Graphics2D graphics2D = img.getWidth()
        ComponentPrinter cp = new ComponentPrinter(comp, fill);
        
        
        try {
            cp.print(g2d, pf, 0);
            
            
        } finally {
            g2d.dispose();
        }

        try {
            ImageIO.write(img, "png", new File("INVOICE_" + (LocalDate.now().format(DateTimeFormatter.ISO_DATE))   +".png"));
            fileLoc = ("INVOICE_" + (LocalDate.now().getDayOfMonth() +"-"+ LocalDate.now().getMonthValue() +"-" + LocalDate.now().getYear())   +".png");
        } catch (IOException ex) {
            ex.printStackTrace();
        } 
       
            
        
    }
public static void printComponentToPrinterq(JComponent comp, boolean fill) throws PrinterException {  
        String fileLoc = "";
        Paper paper = new Paper();
        paper.setSize(595, 842);
        paper.setImageableArea(1, 1, 595, 842);
        
        PageFormat pf = new PageFormat();
        pf.setPaper(paper);
       
        BufferedImage img = new BufferedImage(595, 842 ,BufferedImage.SCALE_SMOOTH);

        Graphics2D g2d = img.createGraphics();
        g2d.translate(pf.getImageableX(),pf.getImageableY());
        g2d.scale(1, 1);
        
        
        //Graphics2D graphics2D = img.getWidth()
        ComponentPrinter cp = new ComponentPrinter(comp, fill);
        PrinterJob  printJob = PrinterJob.getPrinterJob();

        printJob.setPrintable(cp);
        printJob.print();
            
            
        
        
        
        
        try {
            cp.print(g2d, pf, 0);
            
            
        } finally {
            g2d.dispose();
        }

        try {
            ImageIO.write(img, "png", new File("INVOICE_" + (LocalDate.now().format(DateTimeFormatter.ISO_DATE))   +".png"));
            fileLoc = ("INVOICE_" + (LocalDate.now().getDayOfMonth() +"-"+ LocalDate.now().getMonthValue() +"-" + LocalDate.now().getYear())   +".png");
        } catch (IOException ex) {
            ex.printStackTrace();
        } 
       
            
        
    }
    public static void printComponentToPrinter(JComponent comp, boolean fill) throws PrinterException {  
        String fileLoc = "";
        Paper paper = new Paper();
        paper.setSize(595, 842);
        paper.setImageableArea(1, 1, 595, 842);
        
        PageFormat pf = new PageFormat();
        pf.setPaper(paper);
       
        BufferedImage img = new BufferedImage(595, 842 ,BufferedImage.SCALE_SMOOTH);

        Graphics2D g2d = img.createGraphics();
        g2d.translate(pf.getImageableX(),pf.getImageableY());
        g2d.scale(1, 1);
        
        
        //Graphics2D graphics2D = img.getWidth()
        ComponentPrinter cp = new ComponentPrinter(comp, fill);
        PrinterJob  printJob = PrinterJob.getPrinterJob();

        printJob.setPrintable(cp);
        if(printJob.printDialog()) {
                printJob.print();
            }
            
        
        
        
        
        try {
            cp.print(g2d, pf, 0);
            
            
        } finally {
            g2d.dispose();
        }

        try {
            ImageIO.write(img, "png", new File("INVOICE_" + (LocalDate.now().format(DateTimeFormatter.ISO_DATE))   +".png"));
            fileLoc = ("INVOICE_" + (LocalDate.now().getDayOfMonth() +"-"+ LocalDate.now().getMonthValue() +"-" + LocalDate.now().getYear())   +".png");
        } catch (IOException ex) {
            ex.printStackTrace();
        } 
       
            
        
    }
    
    public static class ComponentPrinter implements Printable {

        private JComponent comp;
        private boolean fill;

        public ComponentPrinter(JComponent comp, boolean fill) {
            this.comp = comp;
            this.fill = fill;
        }

        @Override
        public int print(Graphics g, PageFormat format, int page_index) throws PrinterException {

            if (page_index > 0) {
                return Printable.NO_SUCH_PAGE;
            }
            Paper paperq = new Paper();
            paperq.setSize(595, 842);
            paperq.setImageableArea(1, 1, 595, 842);
        
            PageFormat pf = new PageFormat();
            pf.setPaper(paperq);
            Graphics2D g2 = (Graphics2D) g;
            g2.translate(format.getImageableX(), format.getImageableY());

            double width = (int) Math.floor(format.getImageableWidth());
            double height = (int) Math.floor(format.getImageableHeight());

            if (!fill) {

                width = Math.min(width, comp.getPreferredSize().width) + 100;
                height = Math.min(height, comp.getPreferredSize().height);

            }

            comp.setBounds(0, 0, (int) Math.floor(width), (int) Math.floor(height));
            if (comp.getParent() == null) {
                comp.addNotify();
            }
            comp.validate();
            comp.doLayout();
            comp.printAll(g2);
            if (comp.getParent() != null) {
                comp.removeNotify();
            }

            return Printable.PAGE_EXISTS;
        }

    }


    
    





    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrintForm().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel panel1;
    // End of variables declaration//GEN-END:variables
}
