/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hms.pro;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.lang.Object;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author lt1
 */
public class AdminClient extends javax.swing.JPanel {
    int clientNum = 0;
    int ckk1 = 0;
    int ckk2 = 0;
    int ckk3 = 0;
    int ckk4 = 0;
    int ckk5 = 0;
    int ckk6 = 0;
    int ckk7 = 0;
    int ckk8 = 0;
    int ckk9 = 0;
    int ckk10 = 0;
    int ckk11 = 0;
    int ckk12 = 0;
    int ckk13 = 0;
    int ckk14 = 0;
    int ckk15 = 0;
    int ckk16 = 0;
    int ckk17 = 0;
    int ckk18 = 0;
    int ckk19 = 0;
    int ckk20 = 0;
    int newChk = 0;
    String accRef = "" ;  
    String   add1= "" ;  
    String   add2= "" ;  
    String   add3= "" ;  
    String   add4= "" ;  
    String   add5= "" ;  
    String   cids= "" ;  
    String   emails= "" ;  
    String   fstay= "" ;  
    String   lstay= "" ;  
    String   clname= "" ;  
    String   clsur = "" ;  
    String   not1= "" ;  
    String   not2 = "" ;  
    String   not3= "" ;  
    String   not4= "" ;  
    String   phn1= "" ;  
    String   phn2= "" ;  
    String   prnm = "" ;  
    String  staats = "" ;
    /**
     * Creates new form Payments
     */
    public AdminClient() {
        initComponents();
        Guest_Dis();
        
    }

    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminClient().setVisible(true);
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtClientSearch = new javax.swing.JTextField();
        btnRefreshDis = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jtblGuestsDis = new javax.swing.JTable();
        btnSearchGuests = new javax.swing.JButton();
        txtPre = new javax.swing.JTextField();
        txtLStay = new javax.swing.JTextField();
        txtNamed = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtAdd1 = new javax.swing.JTextField();
        txtFStay = new javax.swing.JTextField();
        txtSurd = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtadd3 = new javax.swing.JTextField();
        txtAdd2 = new javax.swing.JTextField();
        txtPhone2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNotes1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtNotes3 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        txtAdd4 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtNotes2 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        txtAdd5 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtNotes4 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        txtPhone1 = new javax.swing.JTextField();
        buttSavv = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtARef = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtStatuses = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtClientID = new javax.swing.JTextField();
        ButtAddc = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setAutoscrolls(true);
        setPreferredSize(new java.awt.Dimension(1000, 500));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtClientSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 200, 30));

        btnRefreshDis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/update.png"))); // NOI18N
        btnRefreshDis.setText("CLEAR");
        btnRefreshDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDisActionPerformed(evt);
            }
        });
        add(btnRefreshDis, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 112, -1));

        jtblGuestsDis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Surname", "Address", "Phone", "Notes 1"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblGuestsDis.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtblGuestsDis.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtblGuestsDis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblGuestsDisMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jtblGuestsDis);
        if (jtblGuestsDis.getColumnModel().getColumnCount() > 0) {
            jtblGuestsDis.getColumnModel().getColumn(0).setResizable(false);
            jtblGuestsDis.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 430, 390));

        btnSearchGuests.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/search x30.png"))); // NOI18N
        btnSearchGuests.setText("SEARCH");
        btnSearchGuests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchGuestsActionPerformed(evt);
            }
        });
        add(btnSearchGuests, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, -1, -1));

        txtPre.setCaretColor(new java.awt.Color(204, 204, 204));
        txtPre.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPreFocusLost(evt);
            }
        });
        add(txtPre, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 80, 30));

        txtLStay.setCaretColor(new java.awt.Color(204, 204, 204));
        txtLStay.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtLStay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLStayFocusLost(evt);
            }
        });
        add(txtLStay, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 90, 110, 30));

        txtNamed.setCaretColor(new java.awt.Color(204, 204, 204));
        txtNamed.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNamed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNamedFocusLost(evt);
            }
        });
        add(txtNamed, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 210, 30));

        jLabel13.setText("First Stay");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, 60, 20));

        txtAdd1.setCaretColor(new java.awt.Color(204, 204, 204));
        txtAdd1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAdd1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAdd1FocusLost(evt);
            }
        });
        add(txtAdd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 210, 30));

        txtFStay.setCaretColor(new java.awt.Color(204, 204, 204));
        txtFStay.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtFStay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFStayFocusLost(evt);
            }
        });
        add(txtFStay, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 50, 110, 30));

        txtSurd.setCaretColor(new java.awt.Color(204, 204, 204));
        txtSurd.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtSurd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSurdFocusLost(evt);
            }
        });
        add(txtSurd, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 210, 30));

        jLabel14.setText("eMail");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, 60, 20));

        txtadd3.setCaretColor(new java.awt.Color(204, 204, 204));
        txtadd3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtadd3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtadd3FocusLost(evt);
            }
        });
        add(txtadd3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 210, 30));

        txtAdd2.setCaretColor(new java.awt.Color(204, 204, 204));
        txtAdd2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAdd2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAdd2FocusLost(evt);
            }
        });
        add(txtAdd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 210, 30));

        txtPhone2.setCaretColor(new java.awt.Color(204, 204, 204));
        txtPhone2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPhone2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPhone2FocusLost(evt);
            }
        });
        add(txtPhone2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, 210, 30));

        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 50, 20));

        jLabel3.setText("Surname");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 50, 20));

        txtNotes1.setColumns(20);
        txtNotes1.setLineWrap(true);
        txtNotes1.setRows(2);
        txtNotes1.setCaretColor(new java.awt.Color(204, 204, 204));
        txtNotes1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNotes1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNotes1FocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(txtNotes1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 190, 230, 40));

        jLabel4.setText("Prefix");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 50, 30));

        jLabel5.setText("Address");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 60, 20));

        txtNotes3.setColumns(20);
        txtNotes3.setLineWrap(true);
        txtNotes3.setRows(2);
        txtNotes3.setCaretColor(new java.awt.Color(204, 204, 204));
        txtNotes3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNotes3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNotes3FocusLost(evt);
            }
        });
        jScrollPane4.setViewportView(txtNotes3);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 290, 230, 40));

        jLabel6.setText("Town/City");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 60, 20));

        txtAdd4.setCaretColor(new java.awt.Color(204, 204, 204));
        txtAdd4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAdd4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAdd4FocusLost(evt);
            }
        });
        add(txtAdd4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 210, 30));

        txtNotes2.setColumns(20);
        txtNotes2.setLineWrap(true);
        txtNotes2.setRows(2);
        txtNotes2.setCaretColor(new java.awt.Color(204, 204, 204));
        txtNotes2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNotes2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNotes2FocusLost(evt);
            }
        });
        jScrollPane5.setViewportView(txtNotes2);

        add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 240, 230, 40));

        jLabel7.setText("County");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, 60, 20));

        txtAdd5.setCaretColor(new java.awt.Color(204, 204, 204));
        txtAdd5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAdd5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAdd5FocusLost(evt);
            }
        });
        add(txtAdd5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, 210, 30));

        txtNotes4.setColumns(20);
        txtNotes4.setLineWrap(true);
        txtNotes4.setRows(1);
        txtNotes4.setCaretColor(new java.awt.Color(204, 204, 204));
        txtNotes4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNotes4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNotes4FocusLost(evt);
            }
        });
        jScrollPane6.setViewportView(txtNotes4);

        add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 340, 230, 40));

        jLabel8.setText("Country");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 60, 20));

        txtPhone1.setCaretColor(new java.awt.Color(204, 204, 204));
        txtPhone1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPhone1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPhone1FocusLost(evt);
            }
        });
        add(txtPhone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, 210, 30));

        buttSavv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/save.png"))); // NOI18N
        buttSavv.setText("SAVE");
        buttSavv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttSavvActionPerformed(evt);
            }
        });
        add(buttSavv, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, 110, 70));

        txtARef.setColumns(16);
        txtARef.setRows(1);
        txtARef.setTabSize(5);
        txtARef.setAutoscrolls(false);
        txtARef.setCaretColor(new java.awt.Color(204, 204, 204));
        txtARef.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtARef.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtARefFocusLost(evt);
            }
        });
        jScrollPane7.setViewportView(txtARef);

        add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 130, 230, 50));

        jLabel9.setText("Phone");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, 60, 20));

        txtEmail.setCaretColor(new java.awt.Color(204, 204, 204));
        txtEmail.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, 340, 30));

        jLabel15.setText("References");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 130, 70, 30));

        jLabel10.setText("Alt Phone");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 370, 60, 20));

        jLabel16.setText("Notes1");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 190, 70, 30));

        jLabel11.setText("Status");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 410, 40, 30));

        jLabel17.setText("Notes2");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 240, 70, 30));

        txtStatuses.setCaretColor(new java.awt.Color(204, 204, 204));
        txtStatuses.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtStatuses.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStatusesFocusLost(evt);
            }
        });
        add(txtStatuses, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 410, 130, 30));

        jLabel18.setText("Notes3");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 290, 70, 30));

        jLabel12.setText("Last Stay");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 90, 60, 20));

        jLabel19.setText("Notes4");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 340, 70, 30));

        txtClientID.setAutoscrolls(false);
        txtClientID.setEnabled(false);
        txtClientID.setRequestFocusEnabled(false);
        txtClientID.setVerifyInputWhenFocusTarget(false);
        add(txtClientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, 110, 30));

        ButtAddc.setText("ADD CLIENT");
        ButtAddc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtAddcActionPerformed(evt);
            }
        });
        add(ButtAddc, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 90, 110, 30));
    }// </editor-fold>//GEN-END:initComponents
public void Guest_Dis(){
        try {
            DefaultTableModel dt21 = (DefaultTableModel) jtblGuestsDis.getModel();
            dt21.setRowCount(0);
      
            Statement as = db1.mycon1().createStatement();
            ResultSet rs =  as.executeQuery("SELECT guests.ID, guests.Prefix, guests.FirstName, guests.LastName, guests.Address_1, guests.County,  guests.Phone1, guests.Email, guests.Reference, guests.FirstDate, guests.LastDate, guests.Phone2, guests.Address_2, guests.Town_City, guests.Country, guests.UserField1, guests.UserField2, guests.ExtraField1, guests.ExtraField2, guests.Status FROM guests");
          
            while (rs.next()) {              
           
                Vector v = new Vector();    
                v.add(rs.getString(1));//notes2
                v.add(rs.getString(3)); //name
                v.add(rs.getString(4)); //surname
                v.add(rs.getString(5)); //Address1 
                v.add(rs.getString(12));//PHone
               
                v.add(rs.getString(18));//notes1
                
                txtClientID.setText(rs.getString(1));
                clientNum = Integer.valueOf(rs.getString(1));
                dt21.addRow(v);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }


private void clearFields(){
                
                txtClientID.setText("");
                txtPre.setText("");
                txtNamed.setText("");
                txtSurd.setText("");
                txtAdd1.setText("");
                txtAdd2.setText("");
                txtadd3.setText("");
                txtAdd4.setText("");
                txtAdd5.setText("");
                txtPhone1.setText("");
                txtPhone2.setText("");
                txtEmail.setText("");
                txtFStay.setText("");
                txtLStay.setText("");
                txtStatuses.setText("");
                txtARef.setText("");
                txtNotes1.setText("");
                txtNotes2.setText("");
                txtNotes3.setText("");
                txtNotes4.setText("");
                ckk1 = 0;
    ckk2 = 0;
    ckk3 = 0;
    ckk4 = 0;
    ckk5 = 0;
    ckk6 = 0;
    ckk7 = 0;
    ckk8 = 0;
    ckk9 = 0;
    ckk10 = 0;
    ckk11 = 0;
    ckk12 = 0;
    ckk13 = 0;
    ckk14 = 0;
    ckk15 = 0;
    ckk16 = 0;
    ckk17 = 0;
    ckk18 = 0;
    ckk19 = 0;
    ckk20 = 0;
     newChk = 0;
    accRef = "" ;  
       add1= "" ;  
       add2= "" ;  
       add3= "" ;  
       add4= "" ;  
       add5= "" ;  
       cids= "" ;  
       emails= "" ;  
       fstay= "" ;  
       lstay= "" ;  
       clname= "" ;  
       clsur = "" ;  
       not1= "" ;  
       not2 = "" ;  
       not3= "" ;  
       not4= "" ;  
       phn1= "" ;  
       phn2= "" ;  
       prnm = "" ;  
      staats = "" ;

}
    
    private void btnSearchGuestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchGuestsActionPerformed
        // TODO add your handling code here:
        ResDis3();
        
    }//GEN-LAST:event_btnSearchGuestsActionPerformed

    private void btnRefreshDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDisActionPerformed
        // TODO add your handling code here:
        Guest_Dis();
        clearFields();
        txtClientSearch.setText("");
    }//GEN-LAST:event_btnRefreshDisActionPerformed

    private void jtblGuestsDisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblGuestsDisMouseClicked
        // TODO add your handling code here:
        int rowCliky = jtblGuestsDis.getSelectedRow();
        txtClientID.setText(jtblGuestsDis.getValueAt(rowCliky, 0).toString()) ;
        clientNum = Integer.valueOf(txtClientID.getText());
        cids =  String.valueOf(clientNum);
        dataPop();
    }//GEN-LAST:event_jtblGuestsDisMouseClicked

    private void buttSavvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttSavvActionPerformed
        if (txtClientID.getText().isEmpty()  !=  true) {
                cids = txtClientID.getText().toString();
        
        
        if ((clientNum >= 0) &&(newChk == 0)){  
             String sqlStat ="UPDATE guests SET ";
            
          //   1   Prefix
             if (txtPre.getText().isEmpty()  !=  true) {
                prnm = txtPre.getText().toString();
                if (ckk1 == 1){
                    sqlStat =  sqlStat + " guests.Prefix = '" + prnm +  "' ";
                    if ((ckk2 ==1) || (ckk3 == 1) || (ckk4 == 1) || (ckk5 == 1)|| (ckk6 == 1) || (ckk7 == 1) || (ckk8== 1)|| (ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }

         // 2   name
            if (txtNamed.getText().isEmpty()  !=  true) {
                clname = txtNamed.getText().toString();
                if (ckk2 == 1){
                    sqlStat =  sqlStat + " guests.FirstName = '" + clname +  "' ";
                    if ( (ckk3 == 1) || (ckk4 == 1) || (ckk5 == 1)|| (ckk6 == 1) || (ckk7 == 1) || (ckk8== 1)|| (ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
         // 3   surname
            if (txtSurd.getText().isEmpty()  !=  true) {
                clsur = txtSurd.getText().toString();
                if (ckk3 == 1){
                    sqlStat =  sqlStat + " guests.LastName = '" + clsur +  "' ";
                    if ( (ckk4 == 1) || (ckk5 == 1)|| (ckk6 == 1) || (ckk7 == 1) || (ckk8== 1)|| (ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
         // 4 add1
            if (txtAdd1.getText().isEmpty()  !=  true) {
                add1 = txtAdd1.getText().toString();
                if (ckk4 == 1){
                    sqlStat =  sqlStat + " guests.Address_1 = '" + add1 +  "' ";
                    if ( (ckk5 == 1)|| (ckk6 == 1) || (ckk7 == 1) || (ckk8== 1)|| (ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
         // 5   add2    
            if (txtAdd2.getText().isEmpty()  !=  true) {
                add2 = txtAdd2.getText().toString();
                if (ckk5 == 1){
                    sqlStat =  sqlStat + " guests.Address_2 = '" + add2 +  "' ";
                    if ( (ckk6 == 1) || (ckk7 == 1) || (ckk8== 1)|| (ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 6    add3
            if (txtadd3.getText().isEmpty()  !=  true) {
                add3 = txtadd3.getText().toString();
                if (ckk6 == 1){
                    sqlStat =  sqlStat + " guests.Town_City = '" + add3 +  "' ";
                    if ((ckk7 == 1) || (ckk8== 1)|| (ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 7    add4
            if (txtAdd4.getText().isEmpty()  !=  true) {
                add4 = txtAdd4.getText().toString();
                if (ckk7 == 1){
                    sqlStat =  sqlStat + " guests.County = '" + add4 +  "' ";
                    if ((ckk8== 1)|| (ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 8    phn1
            if (txtPhone1.getText().isEmpty()  !=  true) {
                phn1 = txtPhone1.getText().toString();  
                if (ckk8 == 1){
                    sqlStat =  sqlStat + " guests.Phone1 = '" + phn1 +  "' ";
                    if ((ckk9 == 1) || (ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 9    phn2
            if (txtPhone2.getText().isEmpty()  !=  true) {
                phn2 = txtPhone2.getText().toString();
                if (ckk9 == 1){
                    sqlStat =  sqlStat + " guests.Phone2= '" + phn2 +  "' ";
                    if ((ckk10 == 1) || (ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 10   
             if (txtEmail.getText().isEmpty()  !=  true) {
                emails = txtEmail.getText().toString();
            
                if (ckk10 == 1){
                    sqlStat =  sqlStat + " guests.Email = '" + emails +  "' ";
                    if ((ckk11 == 1)|| (ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 11   
            if (txtFStay.getText().isEmpty()  !=  true) {
                fstay = txtFStay.getText().toString();
            
                if (ckk11 == 1){
                    sqlStat =  sqlStat + " guests.FirstDate = '" + fstay +  "' ";
                    if ((ckk12 == 1) || (ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 12   chkin
            if (txtLStay.getText().isEmpty()  !=  true) {
                lstay = txtLStay.getText().toString();
            
            
                if (ckk12 == 1){
                    sqlStat =  sqlStat + " guests.LastDate = '" + lstay +  "' ";
                    if ((ckk13 == 1) || (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 13 chkout
            if (txtARef.getText().isEmpty()  !=  true) {
                accRef = txtARef.getText().toString();
                if (ckk13 == 1){
                    sqlStat =  sqlStat + " guests.Reference = '" + accRef +  "' ";
                    if ( (ckk14== 1)|| (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 14  aref
            if (txtNotes1.getText().isEmpty()  !=  true) {
                not1 = txtNotes1.getText().toString();
            
                if (ckk14 == 1){
                    sqlStat =  sqlStat + " guests.UserField1 = '" + not1 +  "' ";
                    if ( (ckk15 == 1) || (ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 15 
             if (txtNotes2.getText().isEmpty()  !=  true) {
                not2 = txtNotes2.getText().toString();
                if (ckk15 == 1){
                    sqlStat =  sqlStat + " guests.UserField2 = '" + not2 +  "' ";
                    if ((ckk16 == 1) || (ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 16 note`1
            if (txtNotes3.getText().isEmpty()  !=  true) {
                not3 = txtNotes3.getText().toString();
            
                if (ckk16 == 1){
                    sqlStat =  sqlStat + " guests.ExtraField1 = '" + not3 +  "' ";
                    if ((ckk17 == 1)|| (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 17 note2
            if (txtNotes4.getText().isEmpty()  !=  true) {
                not4 = txtNotes4.getText().toString();
           
                if (ckk17 == 1){
                    sqlStat =  sqlStat + " guests.ExtraField2 = '" + not4 +  "' ";
                    if ( (ckk18 == 1) || (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
         //18 note3
           if (txtStatuses.getText().isEmpty()  !=  true) {
                staats = txtStatuses.getText().toString();
                if (ckk18 == 1){
                    sqlStat =  sqlStat + " guests.Status = '" + staats +  "' ";
                    if ( (ckk19 == 1) || (ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
        // 19 noe 4
            if (txtAdd5.getText().isEmpty()  !=  true) {
                add5 = txtAdd5.getText().toString();  
                if (ckk19 == 1){
                    sqlStat =  sqlStat + " guests.Country = '" + add5 +  "' ";
                    if ((ckk20== 1)){
                        sqlStat =  sqlStat +  ", ";
                    }
                }
            }
            
            try { 
                sqlStat =   sqlStat + " WHERE guests.ID = '" + txtClientID.getText().toString() + "' ;" ;
                Statement s99 = db1.mycon1().createStatement();
            
            
                s99.executeUpdate(sqlStat);
                clearFields();
                Guest_Dis();
                s99.close(); 
            } catch (SQLException e) { 
                JOptionPane.showMessageDialog(null, "RES Record update error, check entries","Update Error", JOptionPane.ERROR_MESSAGE);
            }          
            
      
        }
        if (newChk == 1){
        
            if (txtPre.getText().isEmpty()  !=  true) {
                prnm = txtPre.getText().toString();
                
            }

        
            if (txtNamed.getText().isEmpty()  !=  true) {
                clname = txtNamed.getText().toString();
                
            }
         
            if (txtSurd.getText().isEmpty()  !=  true) {
                clsur = txtSurd.getText().toString();
               
            }
       
            if (txtAdd1.getText().isEmpty()  !=  true) {
                add1 = txtAdd1.getText().toString();
               
            }
            
            if (txtAdd2.getText().isEmpty()  !=  true) {
                add2 = txtAdd2.getText().toString();
                
            }
      
            if (txtadd3.getText().isEmpty()  !=  true) {
                add3 = txtadd3.getText().toString();
                
            }
        
            if (txtAdd4.getText().isEmpty()  !=  true) {
                add4 = txtAdd4.getText().toString();
                
            }
        
            if (txtPhone1.getText().isEmpty()  !=  true) {
                phn1 = txtPhone1.getText().toString();  
                
            }
        
            if (txtPhone2.getText().isEmpty()  !=  true) {
                phn2 = txtPhone2.getText().toString();
                
            }
           
             if (txtEmail.getText().isEmpty()  !=  true) {
                emails = txtEmail.getText().toString();
            
            }
        
            if (txtFStay.getText().isEmpty()  !=  true) {
                fstay = txtFStay.getText().toString();
            
            }
        
            if (txtLStay.getText().isEmpty()  !=  true) {
                lstay = txtLStay.getText().toString();
            
            }
      
            if (txtARef.getText().isEmpty()  !=  true) {
                accRef = txtARef.getText().toString();
               
            }
       
            if (txtNotes1.getText().isEmpty()  !=  true) {
                not1 = txtNotes1.getText().toString();
          
            }
        
             if (txtNotes2.getText().isEmpty()  !=  true) {
                not2 = txtNotes2.getText().toString();
               
            }
        
            if (txtNotes3.getText().isEmpty()  !=  true) {
                not3 = txtNotes3.getText().toString();
            
            }
       
            if (txtNotes4.getText().isEmpty()  !=  true) {
                not4 = txtNotes4.getText().toString();
            
            }
        
           if (txtStatuses.getText().isEmpty()  !=  true) {
                staats = txtStatuses.getText().toString();
                
            }
        
            if (txtAdd5.getText().isEmpty()  !=  true) {
                add5 = txtAdd5.getText().toString();  
                
            }
            
            try { 
            String SqlA = "INSERT INTO guests ( guests.ID, guests.Prefix, guests.FirstName, guests.LastName, guests.Address_1, guests.Address_2, guests.Town_City, guests.County, guests.Country, guests.Email,  guests.FirstDate, guests.LastDate, guests.Reference, guests.Phone1, guests.Phone2, guests.UserField1, guests.UserField2, guests.ExtraField1, guests.ExtraField2, guests.Status ) VALUES ";
            String SqlB =  "( '" + clientNum +  "',  '" + prnm +  "',  '" + clname  +  "',  '"  +   clsur   +  "',  '"  +   add1  +  "',  '"  +   add2  +  "',  '"  +   add3  +  "',  '"  +   add4  +  "',  '"  +    add5  +  "',  '"   +    emails  +  "',  '"  +    fstay  +  "',  '"  +   lstay  +  "',  '"  +   accRef   +  "',  '"  +  phn1  +  "',  '"  +   phn2 +  "',  '"  +    not1  +  "',  '"  +   not2   +  "',  '"  +   not3   +  "',  '"  +   not4  +  "',  '"  +  staats +"')";
            String DBud = SqlA + SqlB;
            
            Statement s79 = db1.mycon1().createStatement();
            
           
                s79.executeUpdate(DBud);
                s79.close();
            } catch (SQLException e) { 
                JOptionPane.showMessageDialog(null, "Error, New Client could not be Added","Add Client", JOptionPane.ERROR_MESSAGE);
            }          
        
        }
        
           
      }
      clearFields(); 
    }//GEN-LAST:event_buttSavvActionPerformed

    private void ButtAddcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtAddcActionPerformed
        clearFields();
        newChk = 1;
        clientNum = 0;
        fstay = LocalDate.now().getYear()+"-"+ LocalDate.now().getMonthValue() +"-" +LocalDate.now().getDayOfMonth();
        lstay = LocalDate.now().getYear()+"-"+ LocalDate.now().getMonthValue() +"-" +LocalDate.now().getDayOfMonth();
        txtFStay.setText(fstay);
        txtLStay.setText(lstay);
         
        
            try{
                Statement s19 = db1.mycon1().createStatement();
                ResultSet rs15 =  s19.executeQuery("SELECT * FROM guests ;");
                
            rs15.last();
            clientNum = Integer.valueOf(rs15.getString(1));
            clientNum = clientNum +1;
            rs15.close();
            txtClientID.setText(String.valueOf(clientNum));
            } catch (SQLException badCalc){
                JOptionPane.showMessageDialog(null, "Can't Count","Update Error", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_ButtAddcActionPerformed

    private void txtPreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPreFocusLost
        ckk1=1;
    }//GEN-LAST:event_txtPreFocusLost

    private void txtNamedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamedFocusLost
        ckk2=1;       
    }//GEN-LAST:event_txtNamedFocusLost

    private void txtSurdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSurdFocusLost
        ckk3=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtSurdFocusLost

    private void txtAdd1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAdd1FocusLost
        ckk4=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd1FocusLost

    private void txtAdd2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAdd2FocusLost
        ckk5=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd2FocusLost

    private void txtadd3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtadd3FocusLost
        ckk6=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtadd3FocusLost

    private void txtAdd4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAdd4FocusLost
        ckk7=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd4FocusLost

    private void txtPhone1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPhone1FocusLost
        ckk8=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhone1FocusLost

    private void txtPhone2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPhone2FocusLost
        ckk9=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhone2FocusLost

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        ckk10=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtFStayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFStayFocusLost
        ckk11=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtFStayFocusLost

    private void txtLStayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLStayFocusLost
        ckk12=1;             // TODO add your handling code here:
    }//GEN-LAST:event_txtLStayFocusLost

    private void txtARefFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtARefFocusLost
        ckk13=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtARefFocusLost

    private void txtNotes1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNotes1FocusLost
        ckk14=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtNotes1FocusLost

    private void txtNotes2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNotes2FocusLost
        ckk15=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtNotes2FocusLost

    private void txtNotes3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNotes3FocusLost
        ckk16=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtNotes3FocusLost

    private void txtNotes4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNotes4FocusLost
        ckk17=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtNotes4FocusLost

    private void txtStatusesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStatusesFocusLost
        ckk18=1;        // TODO add your handling code here:
    }//GEN-LAST:event_txtStatusesFocusLost

    private void txtAdd5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAdd5FocusLost
         ckk19=1;      // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd5FocusLost
    
    
    public void dataPop(){
        try {
         
          Statement s1 = db1.mycon1().createStatement();
          ResultSet rs =  s1.executeQuery("SELECT guests.ID, guests.Prefix, guests.FirstName, guests.LastName, guests.Address_1, guests.Address_2,  guests.Town_City, guests.County,  guests.Country,  guests.Phone1, guests.Phone2, guests.Email, guests.FirstDate, guests.LastDate, guests.Status, guests.Reference, guests.UserField1, guests.UserField2, guests.ExtraField1, guests.ExtraField2 FROM guests WHERE guests.ID = '" + clientNum + "'");
          
            while (rs.next()) {              
           
                
                txtPre.setText(rs.getString(2));
                txtNamed.setText(rs.getString(3));
                txtSurd.setText(rs.getString(4));
                txtAdd1.setText(rs.getString(5));
                txtAdd2.setText(rs.getString(6));
                txtadd3.setText(rs.getString(7));
                txtAdd4.setText(rs.getString(8));
                txtAdd5.setText(rs.getString(9));
                txtPhone1.setText(rs.getString(10));
                txtPhone2.setText(rs.getString(11));
                txtEmail.setText(rs.getString(12));
                txtFStay.setText(rs.getString(13));
                txtLStay.setText(rs.getString(14));
                txtStatuses.setText(rs.getString(15));
                txtARef.setText(rs.getString(16));
                txtNotes1.setText(rs.getString(17));
                txtNotes2.setText(rs.getString(18));
                txtNotes3.setText(rs.getString(19));
                txtNotes4.setText(rs.getString(20));
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    
    public void ResDis3(){
        try {
          String serchName = txtClientSearch.getText();
          DefaultTableModel dt1 = (DefaultTableModel) jtblGuestsDis.getModel();
          dt1.setRowCount(0);
        
          
          Statement s1 = db1.mycon1().createStatement();
          ResultSet rs =  s1.executeQuery("SELECT guests.ID, guests.Prefix, guests.FirstName, guests.LastName, guests.Address_1, guests.County,  guests.Phone1, guests.Email, guests.Reference, guests.FirstDate, guests.LastDate, guests.Phone2, guests.Address_2, guests.Town_City, guests.Country, guests.UserField1, guests.UserField2, guests.ExtraField1, guests.ExtraField2, guests.Status FROM guests WHERE guests.LastName LIKE '" + serchName + "'");
          
            while (rs.next()) {              
           
                Vector v = new Vector();    
                 v.add(rs.getString(1));//notes2
                v.add(rs.getString(3)); //name
                v.add(rs.getString(4)); //surname
                v.add(rs.getString(5)); //Address1 
                v.add(rs.getString(12));//PHone
               
                v.add(rs.getString(18));//notes1
                dt1.addRow(v);
                txtClientID.setText(rs.getString(1));
              
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtAddc;
    private javax.swing.JButton btnRefreshDis;
    private javax.swing.JButton btnSearchGuests;
    private javax.swing.JButton buttSavv;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable jtblGuestsDis;
    private javax.swing.JTextArea txtARef;
    private javax.swing.JTextField txtAdd1;
    private javax.swing.JTextField txtAdd2;
    private javax.swing.JTextField txtAdd4;
    private javax.swing.JTextField txtAdd5;
    private javax.swing.JTextField txtClientID;
    private javax.swing.JTextField txtClientSearch;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFStay;
    private javax.swing.JTextField txtLStay;
    private javax.swing.JTextField txtNamed;
    private javax.swing.JTextArea txtNotes1;
    private javax.swing.JTextArea txtNotes2;
    private javax.swing.JTextArea txtNotes3;
    private javax.swing.JTextArea txtNotes4;
    private javax.swing.JTextField txtPhone1;
    private javax.swing.JTextField txtPhone2;
    private javax.swing.JTextField txtPre;
    private javax.swing.JTextField txtStatuses;
    private javax.swing.JTextField txtSurd;
    private javax.swing.JTextField txtadd3;
    // End of variables declaration//GEN-END:variables
}
