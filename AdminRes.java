/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hms.pro;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.lang.Object;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author lt1
 */
public class AdminRes extends javax.swing.JPanel {
    
    int resNum = 0;
    int chg1 = 0;
    int chg2 = 0;
    int chg3 = 0;
    int chg4 = 0;
    int chg5 = 0;
    
    
    
    
    
    
    /**
     * Creates new form Payments
     */
    public AdminRes() {
        initComponents();
        resDis();
       
        
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminRes().setVisible(true);
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblResList = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtroom = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNamed = new javax.swing.JTextField();
        txtNotes = new javax.swing.JTextField();
        txtAdd1 = new javax.swing.JTextField();
        txtRate = new javax.swing.JTextField();
        txtResID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPhne1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtChkin = new javax.swing.JTextField();
        txtPhone2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtChkout = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        butSave = new javax.swing.JButton();
        butCheckout = new javax.swing.JButton();

        setForeground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1000, 321));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtblResList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Client", "Check In", "Room", "Check Out", "Notes", "Bill No", "Status", "Created", "TXN", "Rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblResList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblResListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtblResList);
        if (jtblResList.getColumnModel().getColumnCount() > 0) {
            jtblResList.getColumnModel().getColumn(0).setMinWidth(32);
            jtblResList.getColumnModel().getColumn(0).setMaxWidth(32);
            jtblResList.getColumnModel().getColumn(1).setMinWidth(42);
            jtblResList.getColumnModel().getColumn(1).setMaxWidth(42);
            jtblResList.getColumnModel().getColumn(2).setMinWidth(80);
            jtblResList.getColumnModel().getColumn(2).setMaxWidth(80);
            jtblResList.getColumnModel().getColumn(3).setMinWidth(44);
            jtblResList.getColumnModel().getColumn(3).setMaxWidth(44);
            jtblResList.getColumnModel().getColumn(4).setMinWidth(80);
            jtblResList.getColumnModel().getColumn(4).setMaxWidth(80);
            jtblResList.getColumnModel().getColumn(6).setMinWidth(42);
            jtblResList.getColumnModel().getColumn(6).setMaxWidth(42);
            jtblResList.getColumnModel().getColumn(7).setMinWidth(70);
            jtblResList.getColumnModel().getColumn(7).setMaxWidth(70);
            jtblResList.getColumnModel().getColumn(8).setMinWidth(80);
            jtblResList.getColumnModel().getColumn(8).setMaxWidth(80);
            jtblResList.getColumnModel().getColumn(9).setMinWidth(50);
            jtblResList.getColumnModel().getColumn(9).setMaxWidth(50);
            jtblResList.getColumnModel().getColumn(10).setMinWidth(64);
            jtblResList.getColumnModel().getColumn(10).setMaxWidth(64);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 190));

        jLabel6.setText("Room");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 61, 20));

        txtroom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtroomFocusLost(evt);
            }
        });
        add(txtroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 70, -1));

        jLabel7.setText("Check Out");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 290, 70, 20));

        txtNamed.setEditable(false);
        txtNamed.setCaretColor(new java.awt.Color(204, 204, 204));
        txtNamed.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNamed.setEnabled(false);
        add(txtNamed, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 207, -1));

        txtNotes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNotesFocusLost(evt);
            }
        });
        add(txtNotes, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 280, -1));

        txtAdd1.setEditable(false);
        txtAdd1.setCaretColor(new java.awt.Color(204, 204, 204));
        txtAdd1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAdd1.setEnabled(false);
        add(txtAdd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, 320, -1));

        txtRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRateFocusLost(evt);
            }
        });
        add(txtRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 70, -1));

        txtResID.setEditable(false);
        txtResID.setAutoscrolls(false);
        txtResID.setEnabled(false);
        txtResID.setFocusable(false);
        txtResID.setRequestFocusEnabled(false);
        txtResID.setVerifyInputWhenFocusTarget(false);
        add(txtResID, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 230, 70, -1));

        jLabel9.setText("Phone");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 60, 20));

        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 70, 20));

        txtPhne1.setEditable(false);
        txtPhne1.setCaretColor(new java.awt.Color(204, 204, 204));
        txtPhne1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPhne1.setEnabled(false);
        add(txtPhne1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 160, -1));

        jLabel5.setText("Address");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 61, 20));

        jLabel11.setText("Notes");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 61, 20));

        jLabel12.setText("Alt Phone");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 61, 20));

        jLabel15.setText("eMail");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 40, 20));

        txtChkin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtChkinFocusLost(evt);
            }
        });
        add(txtChkin, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 100, -1));

        txtPhone2.setEditable(false);
        txtPhone2.setCaretColor(new java.awt.Color(204, 204, 204));
        txtPhone2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPhone2.setEnabled(false);
        add(txtPhone2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 192, -1));

        jLabel13.setText("Check In");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 260, 60, 20));

        jLabel16.setText("Rate");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 60, 20));

        txtChkout.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtChkoutFocusLost(evt);
            }
        });
        add(txtChkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 100, -1));

        txtEmail.setEditable(false);
        txtEmail.setCaretColor(new java.awt.Color(204, 204, 204));
        txtEmail.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtEmail.setEnabled(false);
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 260, 270, -1));

        butSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/save.png"))); // NOI18N
        butSave.setText("SAVE");
        butSave.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });
        add(butSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, 120, 40));

        butCheckout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/sales_menu.png"))); // NOI18N
        butCheckout.setText("CHECKOUT");
        butCheckout.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCheckoutActionPerformed(evt);
            }
        });
        add(butCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, 120, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
      int resultChk = 0;
      if ((chg1 == 0) &&(chg2 == 0) &&(chg3 == 0) &&(chg4 == 0) &&(chg5 == 0)){
            JOptionPane.showMessageDialog(null, "No changes were made","Nothing Done", JOptionPane.ERROR_MESSAGE);
        }else 
        {          
         try {
            //Statement ws1 = db1.mycon1().createStatement();
            String sqlStat ="UPDATE reservations SET ";
            
                       
            if ((txtRate.getText().isEmpty() != true) ){
                if (chg1 == 1){
                    sqlStat =  sqlStat + " reservations.charge = '" + (txtRate.getText().toString())+  "' ";
                    if ((chg2 ==1) || (chg3 == 1) || (chg4 == 1) || (chg5 == 1)){
                        sqlStat =  sqlStat +  "', ";
                    }
                }
                
            }
            if ((txtroom.getText().isEmpty() != true)){
                if (chg2 == 1) {
                    sqlStat = sqlStat +" reservations.room_no='" + (txtroom.getText().toString())+  "' ";
                    if ((chg3 == 1) || (chg4 == 1) || (chg5 == 1)){
                        sqlStat =  sqlStat +  "', ";
                    }
                }
            }
            if ((txtChkin.getText().isEmpty() != true) ){
                if (chg3 == 1){
                    sqlStat = sqlStat +" reservations.date_start='" + (txtChkin.getText().toString())+  "' ";
                    if ( (chg4 == 1) || (chg5 == 1)){
                        sqlStat =  sqlStat +  "', ";
                    }
                }
            }
            if ((txtChkout.getText().isEmpty() != true)){
                if (chg4 == 1){
                    sqlStat = sqlStat + " reservations.date_end='" + (txtChkout.getText().toString())+  "' ";
                    if ( (chg5 == 1)){
                        sqlStat =  sqlStat +  "', ";
                    }
                }
            }
            if  (chg5 == 1){
                sqlStat = sqlStat +" reservations.notes='" + (txtNotes.getText().toString())+  "' ";
            }
            
            
            
             sqlStat =   sqlStat + " WHERE reservations.res_id = '" + resNum + "' ;" ;
             
             
            Statement s99 = db1.mycon1().createStatement();
            
            try { 
                
                s99.executeUpdate(sqlStat);
                int chg1 = 0;
                int chg2 = 0;
                int chg3 = 0;
                int chg4 = 0;
                int chg5 = 0;
            } catch (SQLException e) { 
                JOptionPane.showMessageDialog(null, "RES Record update error, check entries","D'oh", JOptionPane.ERROR_MESSAGE);
            }          s99.close();   
            
        
        }catch (SQLException qewew)
        {
           JOptionPane.showMessageDialog(null, "RES DB update error","D'oh", JOptionPane.ERROR_MESSAGE);     
        }
         this.validate();   
        resDis();
    } 
        
        
    }//GEN-LAST:event_butSaveActionPerformed

    private void jtblResListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblResListMouseClicked
        // TODO add your handling code here:
        
        resNum =jtblResList.getSelectedRow() ;       /////****************************************************
        txtResID.setText(jtblResList.getValueAt(resNum, 0).toString());
        resNum = Integer.valueOf(txtResID.getText());
       
        txtResID.setText("ID: " + resNum);
        dataPop();
    }//GEN-LAST:event_jtblResListMouseClicked

    private void butCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCheckoutActionPerformed
        if ((resNum >= 0) && (txtroom.getText().isEmpty() != true)){
         try {
            Statement ws1 = db1.mycon1().createStatement();
            String sqlStat ="UPDATE reservations SET reservations.date_end = ";
            sqlStat = sqlStat + " '" + (LocalDate.now().getYear()) + "-" + (LocalDate.now().getMonthValue()) + "-" + (LocalDate.now().getDayOfMonth()) + " '";
            
            sqlStat =   sqlStat + " WHERE reservations.res_id = '" + resNum + "' ;" ;
                       
            Statement s59 = db1.mycon1().createStatement();
            
            try { 
                
                s59.executeUpdate(sqlStat);
                int chg1 = 0;
                int chg2 = 0;
                int chg3 = 0;
                int chg4 = 0;
                int chg5 = 0;
            } catch (SQLException e) { 
                JOptionPane.showMessageDialog(null, "RES Record update error, check entries","D'oh", JOptionPane.ERROR_MESSAGE);
            }          s59.close();   
            
            
            
         }catch(SQLException checmeoout){
             JOptionPane.showMessageDialog(null, "... no ...","Computer", JOptionPane.ERROR_MESSAGE);    
         
         }    
        }
        resDis();
    }//GEN-LAST:event_butCheckoutActionPerformed

    private void txtRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRateFocusLost
        chg1 = 1;
    }//GEN-LAST:event_txtRateFocusLost

    private void txtroomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtroomFocusLost
        chg2 = 1;
    }//GEN-LAST:event_txtroomFocusLost

    private void txtChkinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtChkinFocusLost
        chg3 = 1;
    }//GEN-LAST:event_txtChkinFocusLost

    private void txtChkoutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtChkoutFocusLost
        chg4 = 1;
    }//GEN-LAST:event_txtChkoutFocusLost

    private void txtNotesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNotesFocusLost
        chg5 = 1;
    }//GEN-LAST:event_txtNotesFocusLost


    public void resDis(){
            
        try{
            DefaultTableModel dt13 = (DefaultTableModel) jtblResList.getModel();
            dt13.setRowCount(0);
            Statement s = db1.mycon1().createStatement();
            ResultSet rs =  s.executeQuery("SELECT reservations.res_id, reservations.guest_id, reservations.date_start, reservations.room_no, reservations.date_end, reservations.notes, reservations.bill_id, reservations.status, reservations.date_resmade, reservations.txn_id, reservations.charge  FROM reservations ");
            while (rs.next()) {              
           
                Vector v = new Vector();    
               
                v.add(rs.getString(1)); //id
                v.add(rs.getString(2)); //guse id
                v.add(rs.getString(3)); //checkin 
                v.add(rs.getString(4));//room
                v.add(rs.getString(5)); //checkout
                v.add(rs.getString(6)); //notes
                v.add(rs.getString(7)); //bill id 
                v.add(rs.getString(8));//PHone
                v.add(rs.getString(9));//status
                v.add(rs.getString(10));//ceated
                v.add(rs.getString(11));//notes2
               
                dt13.addRow(v);
            }rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }  
    }
 
   public void dataPop(){
        try {
         
          Statement s1 = db1.mycon1().createStatement();
          ResultSet rs =  s1.executeQuery("SELECT reservations.res_id, reservations.guest_id, reservations.date_start, reservations.room_no, reservations.date_end, reservations.notes, reservations.bill_id, reservations.status, reservations.date_resmade, reservations.txn_id, reservations.charge, guests.FirstName, guests.LastName, guests.Address_1, guests.Phone1, guests.Phone2, guests.Email FROM guests INNER JOIN reservations ON guests.ID = reservations.guest_id  WHERE reservations.res_id = '" + resNum + "';");
          
            while (rs.next()) {              
                txtChkin.setText(rs.getString(3));
                txtChkout .setText(rs.getString(5));          
                
                txtroom.setText(rs.getString(4));
                txtRate.setText(rs.getString(11));
                txtNamed.setText(rs.getString(12)+ " "+ rs.getString(13));
                txtNotes.setText(rs.getString(6));
                txtAdd1.setText(rs.getString(14));
                
                txtPhne1.setText(rs.getString(15));
                txtPhone2.setText(rs.getString(16));
                txtEmail.setText(rs.getString(17));
                
            }rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butCheckout;
    private javax.swing.JButton butSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtblResList;
    private javax.swing.JTextField txtAdd1;
    private javax.swing.JTextField txtChkin;
    private javax.swing.JTextField txtChkout;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNamed;
    private javax.swing.JTextField txtNotes;
    private javax.swing.JTextField txtPhne1;
    private javax.swing.JTextField txtPhone2;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtResID;
    private javax.swing.JTextField txtroom;
    // End of variables declaration//GEN-END:variables
}
