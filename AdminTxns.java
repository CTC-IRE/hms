/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hms.pro;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.lang.Object;
import java.time.Year;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author lt1
 */
public class AdminTxns extends javax.swing.JPanel {
    JpanelLoader jpload = new JpanelLoader();
    JPanel tPanel = new JPanel();
    int ressID =0;
    String dtdtxt = "";
    int selRow = 0;
    int selTxn = 0;
    /**
     * Creates new form Payments
     */
    public AdminTxns() {
        initComponents();
        
        DateFill();
        txnDis();
        txtGNO.setVisible(false);
        taInv.setBorder(null);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminTxns().setVisible(true);
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        cmboRepMonths = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        rbMonthly = new javax.swing.JRadioButton();
        rbDates = new javax.swing.JRadioButton();
        rbDate = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblTxnsDis = new javax.swing.JTable();
        txttxnSearch = new javax.swing.JTextField();
        btnSearchtxns = new javax.swing.JButton();
        ftxtFrom = new javax.swing.JFormattedTextField();
        ftxtTo = new javax.swing.JFormattedTextField();
        btnRefreshDis = new javax.swing.JButton();
        butPInv = new javax.swing.JButton();
        panInv = new javax.swing.JPanel();
        txtChkin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtChkout = new javax.swing.JTextField();
        txtResID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtNamed = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtRate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtroom = new javax.swing.JTextField();
        txtInvNoDis = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtDateDis = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        taInv = new javax.swing.JTextPane();
        txtGNO = new javax.swing.JTextField();

        setName("admin"); // NOI18N
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmboRepMonths.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        add(cmboRepMonths, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 10, 120, 30));

        jLabel4.setText("To:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 90, 30, 30));

        buttonGroup1.add(rbMonthly);
        rbMonthly.setSelected(true);
        rbMonthly.setText("Monthly");
        rbMonthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMonthlyActionPerformed(evt);
            }
        });
        add(rbMonthly, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 130, 30));

        buttonGroup1.add(rbDates);
        rbDates.setText("Date Range");
        rbDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDatesActionPerformed(evt);
            }
        });
        add(rbDates, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 90, 90, 30));

        buttonGroup1.add(rbDate);
        rbDate.setText("Single Date (From)");
        rbDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDateActionPerformed(evt);
            }
        });
        add(rbDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 50, 130, 30));

        jtblTxnsDis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "INVOICE", "ID", "DATE", "ROOM", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblTxnsDis.setColumnSelectionAllowed(true);
        jtblTxnsDis.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtblTxnsDis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblTxnsDisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblTxnsDis);
        jtblTxnsDis.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jtblTxnsDis.getColumnModel().getColumnCount() > 0) {
            jtblTxnsDis.getColumnModel().getColumn(0).setResizable(false);
            jtblTxnsDis.getColumnModel().getColumn(0).setPreferredWidth(38);
            jtblTxnsDis.getColumnModel().getColumn(1).setResizable(false);
            jtblTxnsDis.getColumnModel().getColumn(1).setPreferredWidth(34);
            jtblTxnsDis.getColumnModel().getColumn(2).setResizable(false);
            jtblTxnsDis.getColumnModel().getColumn(2).setPreferredWidth(70);
            jtblTxnsDis.getColumnModel().getColumn(3).setResizable(false);
            jtblTxnsDis.getColumnModel().getColumn(3).setPreferredWidth(36);
            jtblTxnsDis.getColumnModel().getColumn(4).setResizable(false);
            jtblTxnsDis.getColumnModel().getColumn(4).setPreferredWidth(42);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 460, 590));

        txttxnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttxnSearchActionPerformed(evt);
            }
        });
        add(txttxnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 140, 230, 30));

        btnSearchtxns.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/search x30.png"))); // NOI18N
        btnSearchtxns.setText("SEARCH");
        btnSearchtxns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchtxnsActionPerformed(evt);
            }
        });
        add(btnSearchtxns, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 190, 110, -1));

        ftxtFrom.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/y"))));
        add(ftxtFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 50, 100, 30));

        ftxtTo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/y"))));
        add(ftxtTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 90, 100, 30));

        btnRefreshDis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/update.png"))); // NOI18N
        btnRefreshDis.setText("RESET");
        btnRefreshDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDisActionPerformed(evt);
            }
        });
        add(btnRefreshDis, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 190, 110, -1));

        butPInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/save.png"))); // NOI18N
        butPInv.setText("PRINT");
        butPInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPInvActionPerformed(evt);
            }
        });
        add(butPInv, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 240, 110, 50));

        panInv.setBackground(new java.awt.Color(255, 255, 255));
        panInv.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtChkin.setEditable(false);
        txtChkin.setBorder(null);
        panInv.add(txtChkin, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 80, -1));

        jLabel7.setText("Check Out:");
        panInv.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        txtChkout.setEditable(false);
        txtChkout.setBorder(null);
        panInv.add(txtChkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 70, -1));

        txtResID.setEditable(false);
        txtResID.setAutoscrolls(false);
        txtResID.setBorder(null);
        txtResID.setFocusable(false);
        txtResID.setRequestFocusEnabled(false);
        txtResID.setVerifyInputWhenFocusTarget(false);
        panInv.add(txtResID, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 50, -1));

        jLabel13.setText("Check In:");
        panInv.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, -1, -1));

        jLabel5.setText("Name:");
        panInv.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 40, -1));

        jLabel17.setText("Reservation:");
        panInv.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 70, -1));

        txtNamed.setEditable(false);
        txtNamed.setBorder(null);
        panInv.add(txtNamed, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 190, -1));

        jLabel16.setText("Rate  €");
        panInv.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 40, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Weekly Rate");
        panInv.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 130, -1));

        txtRate.setEditable(false);
        txtRate.setBorder(null);
        panInv.add(txtRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 70, -1));

        jLabel6.setText("Room:");
        panInv.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 40, -1));

        txtroom.setEditable(false);
        txtroom.setBorder(null);
        txtroom.setOpaque(true);
        panInv.add(txtroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 50, -1));

        txtInvNoDis.setEditable(false);
        txtInvNoDis.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtInvNoDis.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtInvNoDis.setBorder(null);
        txtInvNoDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInvNoDisActionPerformed(evt);
            }
        });
        panInv.add(txtInvNoDis, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 110, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("RECIEPT");
        panInv.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hms/img/Logo.png"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        panInv.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, 80));

        txtDateDis.setEditable(false);
        txtDateDis.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtDateDis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDateDis.setBorder(null);
        txtDateDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateDisActionPerformed(evt);
            }
        });
        panInv.add(txtDateDis, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 80, 30));

        taInv.setEditable(false);
        taInv.setBorder(null);
        taInv.setAutoscrolls(false);
        taInv.setDisabledTextColor(new java.awt.Color(0, 102, 102));
        jScrollPane3.setViewportView(taInv);

        panInv.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 430, 410));

        add(panInv, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 590));
        add(txtGNO, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 240, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    
    private void rbDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDatesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbDatesActionPerformed

    private void rbDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbDateActionPerformed

    private void rbMonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMonthlyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMonthlyActionPerformed

    private void btnSearchtxnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchtxnsActionPerformed
        // TODO add your handling code here:
        txnSerch();
        //JOptionPane.showMessageDialog(null, "Not Ready Yet!","Sorry!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnSearchtxnsActionPerformed

    private void btnRefreshDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDisActionPerformed
        // TODO add your handling code here:
        txnDis();
        txttxnSearch.setText("");
    }//GEN-LAST:event_btnRefreshDisActionPerformed

    private void txttxnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttxnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttxnSearchActionPerformed

    private void butPInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPInvActionPerformed
        // TODO add your handling code here:        
        try {
            printComponentToPrinterq(panInv, true);
            //printComponentToPrinterq(tPanel, false);
        } catch (PrinterException exp) {
            exp.printStackTrace();
        }
        this.validate();
        
    }//GEN-LAST:event_butPInvActionPerformed

    private void jtblTxnsDisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblTxnsDisMouseClicked
        // TODO add your handling code here:
        selRow = jtblTxnsDis.getSelectedRow();
        selTxn = Integer.valueOf(jtblTxnsDis.getValueAt(selRow, 0).toString());
        disInvoice();
    }//GEN-LAST:event_jtblTxnsDisMouseClicked

    private void txtDateDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateDisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateDisActionPerformed

    private void txtInvNoDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInvNoDisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInvNoDisActionPerformed
    
   public static void printComponentToPrinterq(JComponent comp, boolean fill) throws PrinterException {  
        String fileLoc = "";
        Paper paper = new Paper();
        paper.setSize(595, 842);
        paper.setImageableArea(1, 1, 595, 842);
        
        PageFormat pf = new PageFormat();
        pf.setPaper(paper);
       
        BufferedImage img = new BufferedImage(595, 842 ,BufferedImage.SCALE_SMOOTH);

        Graphics2D g2d = img.createGraphics();
        g2d.translate(pf.getImageableX(),pf.getImageableY());
        g2d.scale(1, 1);
        
        
        //Graphics2D graphics2D = img.getWidth()
        PrintForm.ComponentPrinter cp = new PrintForm.ComponentPrinter(comp, fill);
        PrinterJob  printJob = PrinterJob.getPrinterJob();

        printJob.setPrintable(cp);
        printJob.print();
            
        
        
        try {
            cp.print(g2d, pf, 0);
            
            
        } finally {
            g2d.dispose();
        }

        try {
            ImageIO.write(img, "png", new File("INVOICE_" + (LocalDate.now().format(DateTimeFormatter.ISO_DATE))   +".png"));
            fileLoc = ("INVOICE_" + (LocalDate.now().getDayOfMonth() +"-"+ LocalDate.now().getMonthValue() +"-" + LocalDate.now().getYear())   +".png");
        } catch (IOException ex) {
            ex.printStackTrace();
        } 
       
            
        
    }
     public static class ComponentPrinter implements Printable {

        private JComponent comp;
        private boolean fill;

        public ComponentPrinter(JComponent comp, boolean fill) {
            this.comp = comp;
            this.fill = fill;
        }

        @Override
        public int print(Graphics g, PageFormat format, int page_index) throws PrinterException {

            if (page_index > 0) {
                return Printable.NO_SUCH_PAGE;
            }
            Paper paperq = new Paper();
            paperq.setSize(595, 842);
            paperq.setImageableArea(1, 1, 595, 842);
        
            PageFormat pf = new PageFormat();
            pf.setPaper(paperq);
            Graphics2D g2 = (Graphics2D) g;
            g2.translate(format.getImageableX(), format.getImageableY());

            double width = (int) Math.floor(format.getImageableWidth());
            double height = (int) Math.floor(format.getImageableHeight());

            if (!fill) {

                width = Math.min(width, comp.getPreferredSize().width) + 100;
                height = Math.min(height, comp.getPreferredSize().height);

            }

            comp.setBounds(0, 0, (int) Math.floor(width), (int) Math.floor(height));
            if (comp.getParent() == null) {
                comp.addNotify();
            }
            comp.validate();
            comp.doLayout();
            comp.printAll(g2);
            if (comp.getParent() != null) {
                comp.removeNotify();
            }

            return Printable.PAGE_EXISTS;
        }

    }

    public void DateFill(){
            //Run once, hopefully
            String Sdate = LocalDate.now().getYear()+"-"+ LocalDate.now().getMonthValue() +"-" +LocalDate.now().getDayOfMonth();
            int tYerr = Year.now().getValue();
            String Edate = (tYerr + 1) + "-12-31";
            ftxtFrom.setText(Sdate);
            ftxtTo.setText(Edate);
            
            
       
    }
    
 
    
    
public void disInvoice()  {
    try {
         String txnStr = String.valueOf(selTxn);
         
            Statement s = db1.mycon1().createStatement();
          //                                              1             2          3            4            5               6           7             8           9           10                11            12                  13          14          
            ResultSet rs =  s.executeQuery("SELECT txns.tx_id, txns.created, txns.type, txns.resv_no, txns.gu_rm_no, txns.gue_no, txns.rm_no, txns.details, txns.amtpay, txns.meth FROM txns WHERE ((txns.tx_id='" + txnStr + "') AND (txns.type = 'Payment'));");
            rs.last();
            txtDateDis.setText((rs.getString(2).toString()));
            txtResID.setText(rs.getString(4).toString());
            txtroom.setText(rs.getString(7).toString());
            txtInvNoDis.setText(rs.getString(1).toString());
            ressID = Integer.valueOf(rs.getString(4));
            txtRate.setText(rs.getString(9).toString());
            txtGNO.setText(rs.getString(6).toString());
            getInvDates();
            getInvName();
            taInv.setText( "----------------------------------------------------------------------------------------------------------\n");                  
            taInv.setText(taInv.getText()+"\t  Date     \t Type \t Method \t Amount\n");
            taInv.setText(taInv.getText()+"----------------------------------------------------------------------------------------------------------\n");
            taInv.setText(taInv.getText()+"\t  " + (rs.getString(2)).substring(0, 10) + "\t  " + (String.valueOf(rs.getString(3))) + "\t " + (String.valueOf(rs.getString(10))) + "\t €" + (String.valueOf(rs.getString(9))) + "\n");
           
            taInv.setText(taInv.getText()+"\n\n\n----------------------------------------------------------------------------------------------------------\n");
           
            rs.close();
               
                
        } catch (SQLException e) {
            System.out.println(e);
        }
    
  
    
    }
    
    public void getInvName(){
        try{
            int serID =  Integer.valueOf(txtGNO.getText());
            Statement as = db1.mycon1().createStatement();
            ResultSet rs1 =  as.executeQuery("SELECT guests.ID, guests.Prefix, guests.FirstName, guests.LastName, guests.Address_1, guests.County,  guests.Phone1, guests.Email, guests.Reference, guests.FirstDate, guests.LastDate, guests.Phone2, guests.Address_2, guests.Town_City, guests.Country, guests.UserField1, guests.UserField2, guests.ExtraField1, guests.ExtraField2, guests.Status FROM guests WHERE (((guests.ID)='" + serID + "'));");
            rs1.last();       
            txtNamed.setText(rs1.getString(3).toString()+" "+rs1.getString(4).toString());       
            rs1.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "INV - Name!","Error!", JOptionPane.ERROR_MESSAGE);
    
        }
    }
    public void getInvDates(){
      try{      
            int resID = Integer.valueOf(txtResID.getText());
            Statement s8 = db1.mycon1().createStatement();
            ResultSet rs4 =  s8.executeQuery("SELECT reservations.res_id, reservations.guest_id, reservations.date_start, reservations.room_no, reservations.date_end, reservations.notes, reservations.bill_id, reservations.status, reservations.date_resmade, reservations.txn_id, reservations.charge FROM reservations WHERE ((reservations.res_id) = '" + resID + "');");
            rs4.last();        
            txtChkout.setText(rs4.getString(5).toString());
            txtChkin.setText(rs4.getString(3).toString());  
            ressID = Integer.valueOf(rs4.getString(1));
            rs4.close();
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "INV - Dates!","Error!", JOptionPane.ERROR_MESSAGE);
    
        }
      txtResID.setText(String.valueOf(ressID));
    }
    public void txnSerch(){
        Boolean dCheck = false;
        try {
          String serchName =  txttxnSearch.getText();
          DefaultTableModel dt1 = (DefaultTableModel) jtblTxnsDis.getModel();
          dt1.setRowCount(0);
            try {  
                Double.parseDouble(serchName);  
                dCheck = true;
            } catch(NumberFormatException e){  
                dCheck = false;  
            }  
            if (dCheck = true){
                Statement s = db1.mycon1().createStatement();
                ///                                         1           2           3           4               5               6           7           8           9           10
                ResultSet rs =  s.executeQuery("SELECT txns.tx_id, txns.created, txns.type, txns.resv_no, txns.gu_rm_no, txns.gue_no, txns.rm_no, txns.details, txns.amtpay, txns.meth FROM hms.txns where ((txns.tx_id='" + serchName + "') AND (txns.type = 'Payment'));");
          
                while (rs.next()) {              
           
                    Vector v = new Vector();    
                    v.add(rs.getString(1)); //invoice
                    v.add(rs.getString(2)); //date 
                    v.add(rs.getString(3));//type
                    v.add(rs.getString(7));//room
                    v.add(rs.getString(8)); //details 
                    v.add(rs.getString(9));//amnt
                    v.add(rs.getString(10));//meth
                    v.add(rs.getString(4));//res
                    dt1.addRow(v);
              
                } rs.close();
            }
           
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    public void txnDis(){
        Boolean dCheck = false;
        try {
           
            DefaultTableModel dt1 = (DefaultTableModel) jtblTxnsDis.getModel();
            dt1.setRowCount(0);
            Statement s = db1.mycon1().createStatement();
            ResultSet r1s =  s.executeQuery("SELECT txns.tx_id, txns.created, txns.type, txns.resv_no, txns.gu_rm_no, txns.gue_no, txns.rm_no, txns.details, txns.amtpay, txns.meth FROM hms.txns WHERE ((type = 'Payment'))");
          
                while (r1s.next()) {              
           
                    Vector v = new Vector();    
                    v.add(r1s.getString(1)); //invoice
                    v.add(r1s.getString(6)); //date 
                    v.add(r1s.getString(2));//type
                    v.add(r1s.getString(7));//room
                    //v.add(rs.getString(8)); //details 
                    v.add(r1s.getString(9));//amnt
                    //v.add(rs.getString(10));//meth
                    //v.add(rs.getString(4));//res
                    dt1.addRow(v);
              
                } r1s.close();
            
            
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefreshDis;
    private javax.swing.JButton btnSearchtxns;
    private javax.swing.JButton butPInv;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JComboBox<String> cmboRepMonths;
    private javax.swing.JFormattedTextField ftxtFrom;
    private javax.swing.JFormattedTextField ftxtTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtblTxnsDis;
    private javax.swing.JPanel panInv;
    private javax.swing.JRadioButton rbDate;
    private javax.swing.JRadioButton rbDates;
    private javax.swing.JRadioButton rbMonthly;
    private javax.swing.JTextPane taInv;
    private javax.swing.JTextField txtChkin;
    private javax.swing.JTextField txtChkout;
    private javax.swing.JTextField txtDateDis;
    private javax.swing.JTextField txtGNO;
    private javax.swing.JTextField txtInvNoDis;
    private javax.swing.JTextField txtNamed;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtResID;
    private javax.swing.JTextField txtroom;
    private javax.swing.JTextField txttxnSearch;
    // End of variables declaration//GEN-END:variables
}
